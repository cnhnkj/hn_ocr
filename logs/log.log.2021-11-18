[D 211117 09:09:49 selector_events:58] Using selector: KqueueSelector
[W 211117 09:10:05 web:2243] 405 GET /api/ocr (127.0.0.1) 0.81ms
[I 211117 09:10:31 ocr_handler:56] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": null}
[I 211117 09:10:31 web:2243] 200 POST /api/ocr (127.0.0.1) 0.49ms
[I 211117 10:14:44 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 10:14:44 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x12c609d40>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 10:14:44 cn_std:102] CnStd is initialized, with context cpu
[I 211117 10:14:44 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 10:14:44 selector_events:58] Using selector: KqueueSelector
[I 211117 10:14:46 ocr_handler:32] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": null}
[D 211117 10:14:46 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:14:46 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[W 211117 10:14:47 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 10:14:48 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 10:14:49 web:2243] 200 POST /api/ocr (127.0.0.1) 2427.72ms
[I 211117 10:15:05 ocr_handler:32] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": null}
[D 211117 10:15:05 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:15:05 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[I 211117 10:15:06 web:2243] 200 POST /api/ocr (127.0.0.1) 1526.32ms
[I 211117 10:30:30 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 10:30:30 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x12fed7d40>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 10:30:30 cn_std:102] CnStd is initialized, with context cpu
[I 211117 10:30:30 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 10:30:31 selector_events:58] Using selector: KqueueSelector
[I 211117 10:30:38 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": null}
[D 211117 10:30:38 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:30:38 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[W 211117 10:30:39 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 10:30:40 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 10:30:40 web:2243] 200 POST /api/ocr (127.0.0.1) 1522.95ms
[I 211117 10:31:50 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 10:31:50 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x12ea2ad40>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 10:31:50 cn_std:102] CnStd is initialized, with context cpu
[I 211117 10:31:50 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 10:31:50 selector_events:58] Using selector: KqueueSelector
[I 211117 10:31:59 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": null}
[D 211117 10:31:59 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:31:59 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[W 211117 10:31:59 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 10:32:00 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 10:32:00 web:2243] 200 POST /api/ocr (127.0.0.1) 1368.93ms
[I 211117 10:32:25 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 10:32:25 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x130155d40>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 10:32:25 cn_std:102] CnStd is initialized, with context cpu
[I 211117 10:32:25 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 10:32:25 selector_events:58] Using selector: KqueueSelector
[I 211117 10:32:36 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": null}
[D 211117 10:32:36 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:32:36 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[W 211117 10:32:36 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 10:32:37 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 10:32:37 web:2243] 200 POST /api/ocr (127.0.0.1) 1201.73ms
[I 211117 10:33:15 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 10:33:15 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x1330d2d40>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 10:33:15 cn_std:102] CnStd is initialized, with context cpu
[I 211117 10:33:15 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 10:33:16 selector_events:58] Using selector: KqueueSelector
[I 211117 10:33:21 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": null}
[D 211117 10:33:21 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:33:21 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[W 211117 10:33:22 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 10:33:22 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 10:33:23 web:2243] 200 POST /api/ocr (127.0.0.1) 1370.94ms
[I 211117 10:40:57 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 10:40:57 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x12e810d40>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 10:40:57 cn_std:102] CnStd is initialized, with context cpu
[I 211117 10:40:57 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 10:40:58 selector_events:58] Using selector: KqueueSelector
[I 211117 10:41:03 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": null}
[D 211117 10:41:03 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:41:03 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[W 211117 10:41:03 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 10:41:04 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 10:41:04 web:2243] 200 POST /api/ocr (127.0.0.1) 1194.13ms
[I 211117 10:43:15 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 10:43:15 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x12d96dd40>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 10:43:15 cn_std:102] CnStd is initialized, with context cpu
[I 211117 10:43:15 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 10:43:15 selector_events:58] Using selector: KqueueSelector
[I 211117 10:43:20 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": null}
[D 211117 10:43:20 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:43:20 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[W 211117 10:43:21 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 10:43:22 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[E 211117 10:43:22 web:1793] Uncaught exception POST /api/ocr (127.0.0.1)
    HTTPServerRequest(protocol='http', host='127.0.0.1:8898', method='POST', uri='/api/ocr', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/tornado/web.py", line 1704, in _execute
        result = await result
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/tornado/gen.py", line 216, in wrapper
        result = ctx_run(func, *args, **kwargs)
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/handler/ocr_handler.py", line 35, in post
        response.update(self.handler_url(url, coordinate))
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/handler/ocr_handler.py", line 62, in handler_url
        ocr_res = self.img_ocr(box_infos)
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/handler/ocr_handler.py", line 80, in img_ocr
        ocr_res.append({'ocr_result': words.join(''), 'ocr_prob':prob, 'ocr_box': box})
    AttributeError: 'list' object has no attribute 'join'
[E 211117 10:43:22 web:2243] 500 POST /api/ocr (127.0.0.1) 1360.81ms
[I 211117 10:43:33 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": null}
[D 211117 10:43:33 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:43:33 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[E 211117 10:43:34 web:1793] Uncaught exception POST /api/ocr (127.0.0.1)
    HTTPServerRequest(protocol='http', host='127.0.0.1:8898', method='POST', uri='/api/ocr', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/tornado/web.py", line 1704, in _execute
        result = await result
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/tornado/gen.py", line 216, in wrapper
        result = ctx_run(func, *args, **kwargs)
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/handler/ocr_handler.py", line 35, in post
        response.update(self.handler_url(url, coordinate))
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/handler/ocr_handler.py", line 62, in handler_url
        ocr_res = self.img_ocr(box_infos)
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/handler/ocr_handler.py", line 80, in img_ocr
        ocr_res.append({'ocr_result': words.join(''), 'ocr_prob':prob, 'ocr_box': box})
    AttributeError: 'list' object has no attribute 'join'
[E 211117 10:43:34 web:2243] 500 POST /api/ocr (127.0.0.1) 1136.75ms
[I 211117 10:43:57 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 10:43:57 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x137763d40>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 10:43:57 cn_std:102] CnStd is initialized, with context cpu
[I 211117 10:43:57 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 10:43:58 selector_events:58] Using selector: KqueueSelector
[I 211117 10:44:00 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": null}
[D 211117 10:44:00 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:44:00 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[W 211117 10:44:01 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 10:44:01 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 10:45:13 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 10:45:13 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x137ff7d40>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 10:45:13 cn_std:102] CnStd is initialized, with context cpu
[I 211117 10:45:13 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 10:45:13 selector_events:58] Using selector: KqueueSelector
[I 211117 10:45:15 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": null}
[D 211117 10:45:15 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:45:15 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[W 211117 10:45:16 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 10:45:17 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 10:45:17 web:2243] 200 POST /api/ocr (127.0.0.1) 1859.44ms
[I 211117 10:47:41 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 10:47:41 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x13a537d40>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 10:47:42 cn_std:102] CnStd is initialized, with context cpu
[I 211117 10:47:42 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 10:47:42 selector_events:58] Using selector: KqueueSelector
[I 211117 10:47:46 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": null}
[D 211117 10:47:46 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:47:46 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[W 211117 10:47:47 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 10:47:47 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 10:47:47 ocr_handler:51] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842}], "speed_time": 1.2307279109954834}}
[I 211117 10:47:47 web:2243] 200 POST /api/ocr (127.0.0.1) 1231.59ms
[I 211117 10:48:19 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": true}
[D 211117 10:48:19 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:48:19 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[I 211117 10:48:20 ocr_handler:51] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806, "ocr_box": [186.43750000000003, 66.5, 627.0000000000001, 108.0625]}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357, "ocr_box": [298.06250000000006, 150.8125, 518.9375000000001, 180.5]}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697, "ocr_box": [186.43750000000003, 186.4375, 609.1875000000001, 219.6875]}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748, "ocr_box": [313.50000000000006, 224.4375, 478.5625000000001, 254.12499999999997]}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843, "ocr_box": [115.18750000000003, 349.125, 199.5, 395.4375]}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842, "ocr_box": [115.18750000000003, 393.0625, 200.68750000000006, 439.375]}], "speed_time": 1.1654579639434814}}
[I 211117 10:48:20 web:2243] 200 POST /api/ocr (127.0.0.1) 1167.50ms
[I 211117 10:48:25 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": false}
[D 211117 10:48:25 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:48:25 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[I 211117 10:48:26 ocr_handler:51] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842}], "speed_time": 1.1694331169128418}}
[I 211117 10:48:26 web:2243] 200 POST /api/ocr (127.0.0.1) 1170.21ms
[I 211117 10:48:31 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": 23}
[D 211117 10:48:31 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:48:31 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[I 211117 10:48:32 ocr_handler:51] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842}], "speed_time": 1.1239538192749023}}
[I 211117 10:48:32 web:2243] 200 POST /api/ocr (127.0.0.1) 1124.90ms
[I 211117 10:48:50 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 10:48:50 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x139fb2d40>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 10:48:50 cn_std:102] CnStd is initialized, with context cpu
[I 211117 10:48:50 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 10:48:51 selector_events:58] Using selector: KqueueSelector
[I 211117 10:49:07 ocr_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": 23}
[D 211117 10:49:07 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 10:49:07 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[W 211117 10:49:08 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 10:49:08 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 10:59:42 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 10:59:42 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x1327c1d40>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 10:59:42 cn_std:102] CnStd is initialized, with context cpu
[I 211117 10:59:42 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 10:59:43 selector_events:58] Using selector: KqueueSelector
[E 211117 11:03:35 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[E 211117 11:03:35 web:1793] Uncaught exception POST /api/ocr (127.0.0.1)
    HTTPServerRequest(protocol='http', host='127.0.0.1:8898', method='POST', uri='/api/ocr', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/tornado/web.py", line 1704, in _execute
        result = await result
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/tornado/gen.py", line 216, in wrapper
        result = ctx_run(func, *args, **kwargs)
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/handler/ocr_handler.py", line 40, in post
        logger.info("request is " + json.dumps({'file': file[0], 'coordinate': coordinate}))
      File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/__init__.py", line 231, in dumps
        return _default_encoder.encode(obj)
      File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py", line 199, in encode
        chunks = self.iterencode(o, _one_shot=True)
      File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py", line 257, in iterencode
        return _iterencode(o, 0)
      File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py", line 179, in default
        raise TypeError(f'Object of type {o.__class__.__name__} '
    TypeError: Object of type bytes is not JSON serializable
[E 211117 11:03:35 web:2243] 500 POST /api/ocr (127.0.0.1) 10.94ms
[I 211117 11:04:04 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 11:04:04 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x136d34d40>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 11:04:05 cn_std:102] CnStd is initialized, with context cpu
[I 211117 11:04:05 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 11:04:05 selector_events:58] Using selector: KqueueSelector
[E 211117 11:04:14 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[I 211117 11:12:58 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 11:12:58 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x131fa6dd0>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 11:12:58 cn_std:102] CnStd is initialized, with context cpu
[I 211117 11:12:58 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 11:12:58 selector_events:58] Using selector: KqueueSelector
[E 211117 11:13:08 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[W 211117 11:13:09 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 11:13:09 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 11:13:09 ocr_file_handler:48] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842}], "speed_time": 1.199786901473999}}
[I 211117 11:13:09 web:2243] 200 POST /api/ocr/file (127.0.0.1) 1201.89ms
[E 211117 11:13:24 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[I 211117 11:13:25 ocr_file_handler:48] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842}], "speed_time": 1.0710740089416504}}
[I 211117 11:13:25 web:2243] 200 POST /api/ocr/file?coordinate=23 (127.0.0.1) 1073.08ms
[E 211117 11:13:32 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[I 211117 11:13:34 ocr_file_handler:48] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842}], "speed_time": 1.0372591018676758}}
[I 211117 11:13:34 web:2243] 200 POST /api/ocr/file?coordinate=true (127.0.0.1) 1039.37ms
[I 211117 11:13:54 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 11:13:54 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x13721add0>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 11:13:54 cn_std:102] CnStd is initialized, with context cpu
[I 211117 11:13:54 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 11:13:54 selector_events:58] Using selector: KqueueSelector
[E 211117 11:13:58 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[I 211117 11:15:02 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 11:15:02 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x134696dd0>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 11:15:02 cn_std:102] CnStd is initialized, with context cpu
[I 211117 11:15:02 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 11:15:02 selector_events:58] Using selector: KqueueSelector
[E 211117 11:15:05 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[W 211117 11:15:14 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 11:15:15 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 11:17:36 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 11:17:36 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x13a02cdd0>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 11:17:36 cn_std:102] CnStd is initialized, with context cpu
[I 211117 11:17:36 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 11:17:36 selector_events:58] Using selector: KqueueSelector
[E 211117 11:17:49 ocr_url_handler:36] {"code": 400, "msg": "\u6ca1\u6709\u4f20\u5165\u53c2\u6570"}
[W 211117 11:17:49 web:2243] 400 POST /api/ocr/url (127.0.0.1) 0.73ms
[I 211117 11:17:49 ocr_url_handler:46] {"code": 200, "msg": "\u6210\u529f", "data": {"speed_time": 0.0004870891571044922}}
[E 211117 11:17:49 web:1793] Uncaught exception POST /api/ocr/url (127.0.0.1)
    HTTPServerRequest(protocol='http', host='127.0.0.1:8898', method='POST', uri='/api/ocr/url', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/tornado/web.py", line 1704, in _execute
        result = await result
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/tornado/gen.py", line 216, in wrapper
        result = ctx_run(func, *args, **kwargs)
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/handler/ocr_url_handler.py", line 49, in post
        self.finish(json_decode)
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/tornado/web.py", line 1124, in finish
        raise RuntimeError("finish() called twice")
    RuntimeError: finish() called twice
[I 211117 11:19:04 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 11:19:04 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x132bfddd0>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 11:19:04 cn_std:102] CnStd is initialized, with context cpu
[I 211117 11:19:04 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 11:19:05 selector_events:58] Using selector: KqueueSelector
[I 211117 11:19:27 ocr_url_handler:32] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": 23}
[D 211117 11:19:27 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 11:19:27 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[W 211117 11:19:28 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 11:19:28 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 11:19:29 ocr_url_handler:46] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842}], "speed_time": 2.015561819076538}}
[I 211117 11:19:29 web:2243] 200 POST /api/ocr/url (127.0.0.1) 2016.65ms
[I 211117 11:19:39 ocr_url_handler:32] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": true}
[D 211117 11:19:39 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 11:19:39 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[I 211117 11:19:41 ocr_url_handler:46] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806, "ocr_box": [186.43750000000003, 66.5, 627.0000000000001, 108.0625]}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357, "ocr_box": [298.06250000000006, 150.8125, 518.9375000000001, 180.5]}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697, "ocr_box": [186.43750000000003, 186.4375, 609.1875000000001, 219.6875]}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748, "ocr_box": [313.50000000000006, 224.4375, 478.5625000000001, 254.12499999999997]}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843, "ocr_box": [115.18750000000003, 349.125, 199.5, 395.4375]}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842, "ocr_box": [115.18750000000003, 393.0625, 200.68750000000006, 439.375]}], "speed_time": 1.675163984298706}}
[I 211117 11:19:41 web:2243] 200 POST /api/ocr/url (127.0.0.1) 1676.42ms
[E 211117 11:19:47 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[I 211117 11:19:48 ocr_file_handler:48] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842}], "speed_time": 1.2123830318450928}}
[I 211117 11:19:48 web:2243] 200 POST /api/ocr/file?coordinate=true (127.0.0.1) 1216.00ms
[I 211117 11:20:10 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 11:20:10 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x133ab3dd0>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 11:20:10 cn_std:102] CnStd is initialized, with context cpu
[I 211117 11:20:10 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 11:20:10 selector_events:58] Using selector: KqueueSelector
[E 211117 11:20:15 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[W 211117 11:20:16 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 11:20:16 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 11:20:27 ocr_file_handler:48] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842}], "speed_time": 11.517140865325928}}
[I 211117 11:20:27 web:2243] 200 POST /api/ocr/file?coordinate=true (127.0.0.1) 11523.74ms
[I 211117 11:20:33 ocr_url_handler:32] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": true}
[D 211117 11:20:33 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 11:20:34 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[I 211117 11:24:01 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 11:24:01 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x131114dd0>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 11:24:01 cn_std:102] CnStd is initialized, with context cpu
[I 211117 11:24:01 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 11:24:01 selector_events:58] Using selector: KqueueSelector
[E 211117 11:24:12 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[W 211117 11:24:12 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 11:24:13 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 11:24:19 ocr_file_handler:48] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806, "ocr_box": [186.43750000000003, 66.5, 627.0000000000001, 108.0625]}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357, "ocr_box": [298.06250000000006, 150.8125, 518.9375000000001, 180.5]}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697, "ocr_box": [186.43750000000003, 186.4375, 609.1875000000001, 219.6875]}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748, "ocr_box": [313.50000000000006, 224.4375, 478.5625000000001, 254.12499999999997]}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843, "ocr_box": [115.18750000000003, 349.125, 199.5, 395.4375]}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842, "ocr_box": [115.18750000000003, 393.0625, 200.68750000000006, 439.375]}], "speed_time": 6.830020189285278}}
[I 211117 11:24:19 web:2243] 200 POST /api/ocr/file?coordinate=true (127.0.0.1) 6835.38ms
[E 211117 11:24:27 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[I 211117 11:24:28 ocr_file_handler:48] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842}], "speed_time": 1.1002631187438965}}
[I 211117 11:24:28 web:2243] 200 POST /api/ocr/file?coordinate=21 (127.0.0.1) 1103.19ms
[E 211117 11:24:35 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[E 211117 11:24:35 web:1793] Uncaught exception POST /api/ocr/file (127.0.0.1)
    HTTPServerRequest(protocol='http', host='127.0.0.1:8898', method='POST', uri='/api/ocr/file', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/tornado/web.py", line 1704, in _execute
        result = await result
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/tornado/gen.py", line 216, in wrapper
        result = ctx_run(func, *args, **kwargs)
      File "/Users/longzhe/Workspace/huinong_ai/hn_ocr/handler/ocr_file_handler.py", line 28, in post
        coordinate = True if (self.get_argument('coordinate', None).lower() == 'true') else False
    AttributeError: 'NoneType' object has no attribute 'lower'
[E 211117 11:24:35 web:2243] 500 POST /api/ocr/file (127.0.0.1) 5.53ms
[E 211117 11:25:12 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[I 211117 11:25:46 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 11:25:46 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x13acb1dd0>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 11:25:47 cn_std:102] CnStd is initialized, with context cpu
[I 211117 11:25:47 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 11:25:47 selector_events:58] Using selector: KqueueSelector
[E 211117 11:26:30 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[W 211117 11:26:31 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211117 11:26:31 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211117 11:26:31 ocr_file_handler:48] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842}], "speed_time": 1.076612949371338}}
[I 211117 11:26:31 web:2243] 200 POST /api/ocr/file (127.0.0.1) 1081.34ms
[E 211117 11:26:37 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[I 211117 11:26:38 ocr_file_handler:48] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842}], "speed_time": 1.0116090774536133}}
[I 211117 11:26:38 web:2243] 200 POST /api/ocr/file?coordinate=21 (127.0.0.1) 1014.20ms
[E 211117 11:26:43 base_handler:26] 'utf-8' codec can't decode byte 0xff in position 144: invalid start byte
[I 211117 11:26:44 ocr_file_handler:48] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806, "ocr_box": [186.43750000000003, 66.5, 627.0000000000001, 108.0625]}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357, "ocr_box": [298.06250000000006, 150.8125, 518.9375000000001, 180.5]}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697, "ocr_box": [186.43750000000003, 186.4375, 609.1875000000001, 219.6875]}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748, "ocr_box": [313.50000000000006, 224.4375, 478.5625000000001, 254.12499999999997]}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843, "ocr_box": [115.18750000000003, 349.125, 199.5, 395.4375]}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842, "ocr_box": [115.18750000000003, 393.0625, 200.68750000000006, 439.375]}], "speed_time": 1.0025742053985596}}
[I 211117 11:26:44 web:2243] 200 POST /api/ocr/file?coordinate=true (127.0.0.1) 1005.12ms
[I 211117 11:26:47 ocr_url_handler:32] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": true}
[D 211117 11:26:47 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 11:26:48 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[I 211117 11:26:49 ocr_url_handler:46] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806, "ocr_box": [186.43750000000003, 66.5, 627.0000000000001, 108.0625]}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357, "ocr_box": [298.06250000000006, 150.8125, 518.9375000000001, 180.5]}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697, "ocr_box": [186.43750000000003, 186.4375, 609.1875000000001, 219.6875]}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748, "ocr_box": [313.50000000000006, 224.4375, 478.5625000000001, 254.12499999999997]}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843, "ocr_box": [115.18750000000003, 349.125, 199.5, 395.4375]}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842, "ocr_box": [115.18750000000003, 393.0625, 200.68750000000006, 439.375]}], "speed_time": 1.1941959857940674}}
[I 211117 11:26:49 web:2243] 200 POST /api/ocr/url (127.0.0.1) 1196.50ms
[I 211117 11:27:01 ocr_url_handler:32] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": ""}
[D 211117 11:27:01 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211117 11:27:01 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[I 211117 11:27:02 ocr_url_handler:46] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842}], "speed_time": 1.1376292705535889}}
[I 211117 11:27:02 web:2243] 200 POST /api/ocr/url (127.0.0.1) 1138.75ms
[I 211117 11:28:14 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211117 11:28:14 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x12d10cdd0>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211117 11:28:14 cn_std:102] CnStd is initialized, with context cpu
[I 211117 11:28:14 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211117 11:28:14 selector_events:58] Using selector: KqueueSelector
[W 211117 11:28:20 web:2243] 404 POST /api/ocr/url12341 (127.0.0.1) 2.03ms
[I 211118 09:11:19 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211118 09:11:19 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x134280dd0>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211118 09:11:20 cn_std:102] CnStd is initialized, with context cpu
[I 211118 09:11:20 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211118 09:11:20 selector_events:58] Using selector: KqueueSelector
[I 211118 09:11:28 ocr_url_handler:34] request is {"url": "https://image.cnhnb.com/image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg", "coordinate": true}
[D 211118 09:11:28 connectionpool:975] Starting new HTTPS connection (1): image.cnhnb.com:443
[D 211118 09:11:28 connectionpool:461] https://image.cnhnb.com:443 "GET /image/jpg/head/2021/10/31/ebb000315807439cb92bcde5dc9136ce.jpg HTTP/1.1" 200 155651
[W 211118 09:11:28 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211118 09:11:29 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211118 09:11:29 ocr_url_handler:48] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u4e00\u751f\u7231\u5403\u7684\u6761\u7eb9\u82f9\u679c", "ocr_prob": 0.9542221426963806, "ocr_box": [186.43750000000003, 66.5, 627.0000000000001, 108.0625]}, {"ocr_result": "\u7ea2\u5bcc\u58eb\u5929\u751f\u5c31\u662f", "ocr_prob": 0.9251773357391357, "ocr_box": [298.06250000000006, 150.8125, 518.9375000000001, 180.5]}, {"ocr_result": "\u81ea\u7136\u6210\u719f\u91c7\u6458,\u4e0d\u6253\u836f\u4e0d\u50ac\u719f,", "ocr_prob": 0.5450785160064697, "ocr_box": [186.43750000000003, 186.4375, 609.1875000000001, 219.6875]}, {"ocr_result": "\u7f8e\u5473\u6ee1\u6ee1\u54e6", "ocr_prob": 0.615333080291748, "ocr_box": [313.50000000000006, 224.4375, 478.5625000000001, 254.12499999999997]}, {"ocr_result": "\u65b0\u9c9c", "ocr_prob": 0.9971355199813843, "ocr_box": [115.18750000000003, 349.125, 199.5, 395.4375]}, {"ocr_result": "\u6ee1\u6ee1", "ocr_prob": 0.3760497570037842, "ocr_box": [115.18750000000003, 393.0625, 200.68750000000006, 439.375]}], "speed_time": 1.0372519493103027}}
[I 211118 09:11:29 web:2243] 200 POST /api/ocr/url (127.0.0.1) 1038.05ms
[I 211118 11:29:07 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211118 11:29:07 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x132915dd0>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211118 11:29:07 cn_std:102] CnStd is initialized, with context cpu
[I 211118 11:29:07 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[I 211118 11:35:47 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211118 11:35:47 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x12cac8170>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211118 11:35:48 cn_std:102] CnStd is initialized, with context cpu
[I 211118 11:35:48 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211118 11:35:48 selector_events:58] Using selector: KqueueSelector
[I 211118 15:47:19 cn_std:128] use model: /Users/longzhe/.cnstd/1.1/db_shufflenet_v2_small/cnstd-v1.1-db_shufflenet_v2_small-pan-epoch=034-iou_epoch=0.7190-model.ckpt
[I 211118 15:47:19 dbnet:258] config for "gen_dbnet": {'backbone': <function shufflenet_v2_x1_5 at 0x137943440>, 'backbone_submodule': None, 'fpn_layers': ['maxpool', 'stage2', 'stage3', 'stage4'], 'fpn_channels': [24, 176, 352, 704], 'input_shape': (3, 768, 768), 'url': None, 'fpn_type': 'pan', 'auto_rotate_whole_image': False, 'rotated_bbox': False}
[I 211118 15:47:19 cn_std:102] CnStd is initialized, with context cpu
[I 211118 15:47:19 cn_ocr:145] use model: /Users/longzhe/.cnocr/2.1/densenet_lite_136-gru/cnocr-v2.1-densenet_lite_136-gru-epoch=002-complete_match_epoch=0.8848-model.ckpt
[D 211118 15:47:19 selector_events:58] Using selector: KqueueSelector
[W 211118 15:49:51 web:2243] 404 POST /api/orc/url (127.0.0.1) 4.61ms
[W 211118 15:50:26 web:2243] 404 POST /api/orc/url (127.0.0.1) 21.35ms
[W 211118 15:50:38 web:2243] 404 POST /api/orc/url (127.0.0.1) 3.53ms
[W 211118 15:50:54 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/torch/nn/functional.py:3680: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
      "The default behavior for interpolate/upsample with float scale_factor changed "
    
[W 211118 15:50:55 warnings:110] /Users/longzhe/Workspace/huinong_ai/hn_ocr/venv/lib/python3.7/site-packages/cnocr/models/ocr_model.py:194: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
      input_lengths = input_lengths // self.encoder.compress_ratio
    
[I 211118 15:50:55 ocr_url_handler:50] {"code": 200, "msg": "\u6210\u529f", "data": {"ocr_res": [{"ocr_result": "\u6211\u4eec\u4e00\u76f4\u5728\u5065\u5eb7\u79cd\u690d!", "ocr_prob": 0.6458703875541687}, {"ocr_result": "\u6211\u4eec\u4e00\u76f4\u5728\u575a\u6301\u4ece\u6e90\u5934\u63a7\u5236\uff0c\u5065\u5eb7\u751f\u6001\u79cd\u690d", "ocr_prob": 0.6851826310157776}, {"ocr_result": "\u786e\u4fdd\u6bcf\u4e2a\u82f9\u679c\u7684\u54c1\u8d28", "ocr_prob": 0.9645964503288269}, {"ocr_result": "\u7eaf\u51c0\u7a7a\u6c14", "ocr_prob": 0.9800058603286743}, {"ocr_result": "\u519c\u5bb6\u80a5\u79cd\u690d", "ocr_prob": 0.9639523029327393}, {"ocr_result": "\u6cc9\u6c34\u704c\u6e89", "ocr_prob": 0.5374231934547424}], "speed_time": 1.3493852615356445}}
[I 211118 15:50:55 web:2243] 200 POST /api/ocr/url (127.0.0.1) 1355.88ms
